
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `MySQL`
//     Provider:               `MySql.Data.MySqlClient`
//     Connection String:      `Server=localhost;Database=larpworks_db;Uid=larpworks_admin;Pwd=larpworks;`
//     Schema:                 ``
//     Include Views:          `False`


using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace MySQL
{
	public partial class LarpworksDatabase : Database
	{
		public LarpworksDatabase() 
			: base("MySQL")
		{
			CommonConstruct();
		}

		public LarpworksDatabase(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			LarpworksDatabase GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static LarpworksDatabase GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new LarpworksDatabase();
        }

		[ThreadStatic] static LarpworksDatabase _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static LarpworksDatabase repo { get { return LarpworksDatabase.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
		}
	}
	

    
	[TableName("larpworks_db.advancement_list_attributes")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class advancement_list_attribute : LarpworksDatabase.Record<advancement_list_attribute>  
    {
		[Column] public int id { get; set; }
		[Column] public int advancement_list_id { get; set; }
		[Column] public int attribute_id { get; set; }
		[Column] public sbyte is_staff_only { get; set; }
		[Column] public sbyte is_free_with_requirements { get; set; }
	}
    
	[TableName("larpworks_db.advancement_list_requirements")]
	[ExplicitColumns]
    public partial class advancement_list_requirement : LarpworksDatabase.Record<advancement_list_requirement>  
    {
		[Column] public int? advancement_list_attribute_id { get; set; }
		[Column] public int? attribute_requirement_id { get; set; }
		[Column] public int? requirement_rank { get; set; }
	}
    
	[TableName("larpworks_db.advancement_lists")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class advancement_list : LarpworksDatabase.Record<advancement_list>  
    {
		[Column] public int id { get; set; }
		[Column] public string name { get; set; }
		[Column] public sbyte is_chargen_only { get; set; }
		[Column] public sbyte is_staff_only { get; set; }
	}
    
	[TableName("larpworks_db.alembic_version")]
	[PrimaryKey("version_num", AutoIncrement=false)]
	[ExplicitColumns]
    public partial class alembic_version : LarpworksDatabase.Record<alembic_version>  
    {
		[Column] public string version_num { get; set; }
	}
    
	[TableName("larpworks_db.attribute_types")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class attribute_type : LarpworksDatabase.Record<attribute_type>  
    {
		[Column] public int id { get; set; }
		[Column] public string name { get; set; }
	}
    
	[TableName("larpworks_db.attributes")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class attribute : LarpworksDatabase.Record<attribute>  
    {
		[Column] public int id { get; set; }
		[Column] public string attribute_name { get; set; }
		[Column] public string description { get; set; }
		[Column] public int attribute_type_id { get; set; }
	}
    
	[TableName("larpworks_db.award_logs")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class award_log : LarpworksDatabase.Record<award_log>  
    {
		[Column] public int id { get; set; }
		[Column] public int user_id { get; set; }
		[Column] public int? character_id { get; set; }
		[Column] public int award_type_id { get; set; }
		[Column] public DateTime award_date { get; set; }
		[Column] public int amount { get; set; }
		[Column] public string reason { get; set; }
	}
    
	[TableName("larpworks_db.award_types")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class award_type : LarpworksDatabase.Record<award_type>  
    {
		[Column] public int id { get; set; }
		[Column] public string name { get; set; }
	}
    
	[TableName("larpworks_db.bucket_tickets")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class bucket_ticket : LarpworksDatabase.Record<bucket_ticket>  
    {
		[Column] public int id { get; set; }
		[Column] public int bucket_id { get; set; }
		[Column] public string title { get; set; }
		[Column] public int creator_id { get; set; }
		[Column] public int? assignee_id { get; set; }
		[Column] public int? status { get; set; }
		[Column] public DateTime? created_on { get; set; }
		[Column] public DateTime? last_modified { get; set; }
	}
    
	[TableName("larpworks_db.buckets")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class bucket : LarpworksDatabase.Record<bucket>  
    {
		[Column] public int id { get; set; }
		[Column] public string name { get; set; }
	}
    
	[TableName("larpworks_db.character_attributes")]
	[ExplicitColumns]
    public partial class character_attribute : LarpworksDatabase.Record<character_attribute>  
    {
		[Column] public int? character_id { get; set; }
		[Column] public int? attribute_id { get; set; }
		[Column] public int? rank { get; set; }
		[Column] public DateTime? last_modified { get; set; }
		[Column] public string comments { get; set; }
	}
    
	[TableName("larpworks_db.character_notes")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class character_note : LarpworksDatabase.Record<character_note>  
    {
		[Column] public int id { get; set; }
		[Column] public string title { get; set; }
		[Column] public string body { get; set; }
		[Column] public int character_id { get; set; }
	}
    
	[TableName("larpworks_db.characters")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class character : LarpworksDatabase.Record<character>  
    {
		[Column] public int id { get; set; }
		[Column] public string character_name { get; set; }
		[Column] public DateTime? create_date { get; set; }
		[Column] public DateTime? last_update { get; set; }
		[Column] public int user_id { get; set; }
	}
    
	[TableName("larpworks_db.inventory")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class inventory : LarpworksDatabase.Record<inventory>  
    {
		[Column] public int id { get; set; }
		[Column] public int quantity { get; set; }
		[Column] public int character_id { get; set; }
		[Column] public int item_id { get; set; }
	}
    
	[TableName("larpworks_db.items")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class item : LarpworksDatabase.Record<item>  
    {
		[Column] public int id { get; set; }
		[Column] public string item_name { get; set; }
		[Column] public string description { get; set; }
		[Column] public string item_attr { get; set; }
		[Column] public DateTime? last_update { get; set; }
	}
    
	[TableName("larpworks_db.roles")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class role : LarpworksDatabase.Record<role>  
    {
		[Column] public int id { get; set; }
		[Column] public string name { get; set; }
		[Column] public string description { get; set; }
	}
    
	[TableName("larpworks_db.ticket_access_lists")]
	[ExplicitColumns]
    public partial class ticket_access_list : LarpworksDatabase.Record<ticket_access_list>  
    {
		[Column] public int? ticket_id { get; set; }
		[Column] public int? user_id { get; set; }
		[Column] public sbyte? can_write { get; set; }
		[Column] public sbyte? can_read { get; set; }
	}
    
	[TableName("larpworks_db.ticket_comments")]
	[ExplicitColumns]
    public partial class ticket_comment : LarpworksDatabase.Record<ticket_comment>  
    {
		[Column] public int? ticket_id { get; set; }
		[Column] public int? author_id { get; set; }
		[Column] public string comment { get; set; }
		[Column] public DateTime? created_on { get; set; }
	}
    
	[TableName("larpworks_db.user_roles")]
	[ExplicitColumns]
    public partial class user_role : LarpworksDatabase.Record<user_role>  
    {
		[Column] public int? user_id { get; set; }
		[Column] public int? role_id { get; set; }
	}
    
	[TableName("larpworks_db.users")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class user : LarpworksDatabase.Record<user>  
    {
		[Column] public int id { get; set; }
		[Column] public string email { get; set; }
		[Column] public string phone { get; set; }
		[Column] public string user_name { get; set; }
		[Column] public string first_name { get; set; }
		[Column] public string last_name { get; set; }
		[Column] public string birth_month { get; set; }
		[Column] public int? birth_day { get; set; }
		[Column] public int? birth_year { get; set; }
		[Column] public DateTime? join_date { get; set; }
		[Column] public string emergency_contact_name { get; set; }
		[Column] public string emergency_contact_number { get; set; }
		[Column] public string password_hash { get; set; }
		[Column] public DateTime? last_update { get; set; }
		[Column] public sbyte is_admin { get; set; }
	}
}
